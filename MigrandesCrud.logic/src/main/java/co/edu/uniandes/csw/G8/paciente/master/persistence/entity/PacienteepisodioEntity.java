/* ========================================================================
 * Copyright 2014 G8
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 G8

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201411201032

*/

package co.edu.uniandes.csw.G8.paciente.master.persistence.entity;

import co.edu.uniandes.csw.G8.episodio.persistence.entity.EpisodioEntity;
import co.edu.uniandes.csw.G8.paciente.persistence.entity.PacienteEntity;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.PrimaryKeyJoinColumn; 
import org.eclipse.persistence.annotations.JoinFetch;

@Entity
@IdClass(PacienteepisodioEntityId.class)
@NamedQueries({
    @NamedQuery(name = "PacienteepisodioEntity.getByMasterId", query = "SELECT  u FROM PacienteepisodioEntity u WHERE u.pacienteId=:pacienteId"),
    @NamedQuery(name = "PacienteepisodioEntity.deletePacienteepisodioEntity", query = "DELETE FROM PacienteepisodioEntity u WHERE u.pacienteId=:pacienteId and  u.episodioId=:episodioId")
})
public class PacienteepisodioEntity implements Serializable {

    @Id
    @Column(name = "pacienteId")
    private Long pacienteId;
    @Id
    @Column(name = "episodioId")
    private Long episodioId;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "pacienteId", referencedColumnName = "id")
    @JoinFetch
    private EpisodioEntity pacienteIdEntity;
    @ManyToOne
    @PrimaryKeyJoinColumn(name = "episodioId", referencedColumnName = "id")
    @JoinFetch
    private EpisodioEntity episodioIdEntity; 

    public PacienteepisodioEntity() {
    }

    public PacienteepisodioEntity(Long pacienteId, Long episodioId) {
        this.pacienteId =pacienteId;
        this.episodioId = episodioId;
    }

    public Long getPacienteId() {
        return pacienteId;
    }

    public void setPacienteId(Long pacienteId) {
        this.pacienteId = pacienteId;
    }

    public Long getEpisodioId() {
        return episodioId;
    }

    public void setEpisodioId(Long episodioId) {
        this.episodioId = episodioId;
    }

    public EpisodioEntity getPacienteIdEntity() {
        return pacienteIdEntity;
    }

    public void setPacienteIdEntity(EpisodioEntity pacienteIdEntity) {
        this.pacienteIdEntity = pacienteIdEntity;
    }

    public EpisodioEntity getEpisodioIdEntity() {
        return episodioIdEntity;
    }

    public void setEpisodioIdEntity(EpisodioEntity episodioIdEntity) {
        this.episodioIdEntity = episodioIdEntity;
    }

}
